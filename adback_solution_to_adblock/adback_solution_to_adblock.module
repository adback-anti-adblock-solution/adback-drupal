<?php

/**
 * @file
 * The main module.
 *
 * The main file of adback module.
 */

require_once 'lib/AdbackSolutionToAdblockGeneric.php';

/**
 * Implements hook_permission().
 */
function adback_solution_to_adblock_permission() {

  $permissions = array(
    'administer adback' => array(
      'title' => t('Administrate AdBack module'),
    ),
  );

  return $permissions;
}

/**
 * Implements hook_enable()
 */
function adback_solution_to_adblock_enable() {
    $api = new AdbackSolutionToAdblockApi();
    $api->registerUser(check_plain(variable_get('site_mail', ini_get('sendmail_from'))), $GLOBALS['base_url']);
    $time = time() + 8*24*60;
    variable_set('adback_solution_to_adblock_incenteev_display', $time);
}

/**
 * Implements hook_menu().
 */
function adback_solution_to_adblock_menu() {

  // Administration pages.
  $items['admin/config/adback'] = array(
    'title' => 'AdBack',
    'description' => 'Configure AdBack Module.',
    'position' => 'left',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer adback'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/adback/statistics'] = array(
    'title' => 'Statistics',
    'description' => 'Show Adback Statistics',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('adback_solution_to_adblock_admin_statistics'),
    'access arguments' => array('administer adback'),
    'file' => 'adback_solution_to_adblock.admin.inc',
    'weight' => -30,
  );
  $items['admin/config/adback/message'] = array(
    'title' => 'Message',
    'description' => 'Configure AdBack message.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('adback_solution_to_adblock_admin_message'),
    'access arguments' => array('administer adback'),
    'file' => 'adback_solution_to_adblock.admin.inc',
    'weight' => -20,
  );
  $items['admin/config/adback/settings'] = array(
    'title' => 'Settings',
    'description' => 'Configure AdBack profil.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('adback_solution_to_adblock_admin_settings'),
    'access arguments' => array('administer adback'),
    'file' => 'adback_solution_to_adblock.admin.inc',
    'weight' => -10,
  );
  $items['admin/config/adback/logout'] = array(
    'title' => 'logout',
    'page callback' => ' adback_solution_to_adblock_admin_logout',
    'access arguments' => array('administer adback'),
    'file' => 'adback_solution_to_adblock.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function adback_solution_to_adblock_theme() {

  return array(
    'adback_solution_to_adblock_admin_login' => array(
      'render element' => 'form',
      'template' => 'login',
      'path' => drupal_get_path('module', 'adback_solution_to_adblock') . '/admin',
    ),
    'adback_solution_to_adblock_admin_statistics' => array(
      'render element' => 'form',
      'template' => 'statistics',
      'path' => drupal_get_path('module', 'adback_solution_to_adblock') . '/admin',
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function adback_solution_to_adblock_form_alter(&$form, &$form_state, $form_id) {

  if (strpos($form_id, 'adback_') === FALSE) {
    return;
  }

  $adback = AdbackSolutionToAdblockGeneric::getInstance();

  if ($adback->isConnected()) {
    if ($adback->getDomain() == '') {
      $adback->askDomain();
    }

  }
  else {
    $form['#theme'] = array('adback_solution_to_adblock_admin_login');
  }
}

/**
 * Implements hook_preprocess_html().
 */
function adback_solution_to_adblock_preprocess_page(&$variables) {

  if (FALSE === is_array($variables)) {
    return;
  }

  if (arg(0) == 'admin') {
    return;
  }

  $adback = AdbackSolutionToAdblockGeneric::getInstance();

  $me = $adback->getMyInfo();
  $activation = variable_get('adback_solution_to_adblock_message_activation', FALSE);

  if (is_array($me)) {
    if (!empty($me['analytics_domain']) && !empty($me['analytics_script'])) {
      $js = "(function (a,d){var s,t;s=d.createElement('script');s.src=a;s.async=1;t=d.getElementsByTagName('script')[0];t.parentNode.insertBefore(s,t);})('https://" . $me['analytics_domain'] . "/" . $me['analytics_script'] . ".js', document);";

      drupal_add_js($js, array(
        'type' => 'inline',
        'scope' => 'footer',
        'weight' => JS_THEME,
      ));
    }

    if (!empty($me['message_domain']) && !empty($me['message_script'])) {
      if ($activation) {
        $js = "(function (a,d){var s,t,u;s=d.createElement('script');s.src=a;s.async=1;t=d.getElementsByTagName('script')[0];t.parentNode.insertBefore(s,t);})('https://" . $me['message_domain'] . "/" . $me['message_script'] . ".js', document);";
        drupal_add_js($js, array(
          'type' => 'inline',
          'scope' => 'footer',
          'weight' => JS_THEME,
        ));
      }
    }
  }
}
